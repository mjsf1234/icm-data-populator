(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{"4nCw":function(n,t){n.exports='<>\n  <InputGroup className="mb-3">\n    <Button variant="outline-secondary" id="button-addon1">\n      Button\n    </Button>\n    <FormControl\n      aria-label="Example text with button addon"\n      aria-describedby="basic-addon1"\n    />\n  </InputGroup>\n\n  <InputGroup className="mb-3">\n    <FormControl\n      placeholder="Recipient\'s username"\n      aria-label="Recipient\'s username"\n      aria-describedby="basic-addon2"\n    />\n    <Button variant="outline-secondary" id="button-addon2">\n      Button\n    </Button>\n  </InputGroup>\n\n  <InputGroup className="mb-3">\n    <Button variant="outline-secondary">Button</Button>\n    <Button variant="outline-secondary">Button</Button>\n    <FormControl aria-label="Example text with two button addons" />\n  </InputGroup>\n\n  <InputGroup>\n    <FormControl\n      placeholder="Recipient\'s username"\n      aria-label="Recipient\'s username with two button addons"\n    />\n    <Button variant="outline-secondary">Button</Button>\n    <Button variant="outline-secondary">Button</Button>\n  </InputGroup>\n</>;\n'},"7hyW":function(n,t){n.exports='<>\n  <InputGroup className="mb-3">\n    <InputGroup.Checkbox aria-label="Checkbox for following text input" />\n    <FormControl aria-label="Text input with checkbox" />\n  </InputGroup>\n  <InputGroup>\n    <InputGroup.Radio aria-label="Radio button for following text input" />\n    <FormControl aria-label="Text input with radio button" />\n  </InputGroup>\n</>;\n'},JbmH:function(n,t){n.exports='<InputGroup className="mb-3">\n  <InputGroup.Text>First and last name</InputGroup.Text>\n  <FormControl aria-label="First name" />\n  <FormControl aria-label="Last name" />\n</InputGroup>;\n'},fzXE:function(n,t){n.exports='<>\n  <InputGroup size="sm" className="mb-3">\n    <InputGroup.Text id="inputGroup-sizing-sm">Small</InputGroup.Text>\n    <FormControl aria-label="Small" aria-describedby="inputGroup-sizing-sm" />\n  </InputGroup>\n  <br />\n  <InputGroup className="mb-3">\n    <InputGroup.Text id="inputGroup-sizing-default">Default</InputGroup.Text>\n    <FormControl\n      aria-label="Default"\n      aria-describedby="inputGroup-sizing-default"\n    />\n  </InputGroup>\n  <br />\n  <InputGroup size="lg">\n    <InputGroup.Text id="inputGroup-sizing-lg">Large</InputGroup.Text>\n    <FormControl aria-label="Large" aria-describedby="inputGroup-sizing-sm" />\n  </InputGroup>\n</>;\n'},"ng+X":function(n,t){n.exports='<>\n  <InputGroup className="mb-3">\n    <InputGroup.Text>$</InputGroup.Text>\n    <InputGroup.Text>0.00</InputGroup.Text>\n    <FormControl aria-label="Dollar amount (with dot and two decimal places)" />\n  </InputGroup>\n  <InputGroup>\n    <FormControl aria-label="Dollar amount (with dot and two decimal places)" />\n    <InputGroup.Text>$</InputGroup.Text>\n    <InputGroup.Text>0.00</InputGroup.Text>\n  </InputGroup>\n</>;\n'},oiVA:function(n,t){n.exports='<>\n  <InputGroup className="mb-3">\n    <InputGroup.Text id="basic-addon1">@</InputGroup.Text>\n    <FormControl\n      placeholder="Username"\n      aria-label="Username"\n      aria-describedby="basic-addon1"\n    />\n  </InputGroup>\n\n  <InputGroup className="mb-3">\n    <FormControl\n      placeholder="Recipient\'s username"\n      aria-label="Recipient\'s username"\n      aria-describedby="basic-addon2"\n    />\n    <InputGroup.Text id="basic-addon2">@example.com</InputGroup.Text>\n  </InputGroup>\n\n  <Form.Label htmlFor="basic-url">Your vanity URL</Form.Label>\n  <InputGroup className="mb-3">\n    <InputGroup.Text id="basic-addon3">\n      https://example.com/users/\n    </InputGroup.Text>\n    <FormControl id="basic-url" aria-describedby="basic-addon3" />\n  </InputGroup>\n\n  <InputGroup className="mb-3">\n    <InputGroup.Text>$</InputGroup.Text>\n    <FormControl aria-label="Amount (to the nearest dollar)" />\n    <InputGroup.Text>.00</InputGroup.Text>\n  </InputGroup>\n\n  <InputGroup>\n    <InputGroup.Text>With textarea</InputGroup.Text>\n    <FormControl as="textarea" aria-label="With textarea" />\n  </InputGroup>\n</>;\n'},rGuw:function(n,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return B})),o.d(t,"default",(function(){return F}));var e=o("rePB"),r=o("zLVn"),p=(o("mXGw"),o("7ljp")),a=o("Snbm"),u=o("vXRK"),i=o("1u5/"),d=o("oiVA"),l=o.n(d),m=o("z1EJ"),s=o.n(m),c=o("4nCw"),b=o.n(c),I=o("7hyW"),w=o.n(I),x=o("ng+X"),h=o.n(x),G=o("JbmH"),D=o.n(G),f=o("vs/B"),y=o.n(f),g=o("fzXE"),T=o.n(g);function O(n,t){var o=Object.keys(n);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(n);t&&(e=e.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),o.push.apply(o,e)}return o}function j(n){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?O(Object(o),!0).forEach((function(t){Object(e.a)(n,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):O(Object(o)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(o,t))}))}return n}var B={},C={query:"1902248718",_frontmatter:B},v=a.a;function F(n){var t=n.components,o=Object(r.a)(n,["components"]);return Object(p.mdx)(v,j(j(j({},C),o),{},{components:t,mdxType:"MDXLayout"}),Object(p.mdx)("h1",j({},{id:"inputgroup"}),"InputGroup"),Object(p.mdx)("p",null,"Place one add-on or button on either side of an input. You may also\nplace one on both sides of an input. Remember to place\n",Object(p.mdx)("inlineCode",{parentName:"p"},"<label>"),"s outside the input group."),Object(p.mdx)(i.a,{codeText:l.a,mdxType:"ReactPlayground"}),Object(p.mdx)("h2",j({},{id:"sizing"}),"Sizing"),Object(p.mdx)("p",null,"Add the relative form sizing classes to the ",Object(p.mdx)("inlineCode",{parentName:"p"},"InputGroup")," and\ncontents within will automatically resizeâ€”no need for repeating the form\ncontrol size classes on each element."),Object(p.mdx)(i.a,{codeText:T.a,mdxType:"ReactPlayground"}),Object(p.mdx)("h2",j({},{id:"checkboxes-and-radios"}),"Checkboxes and radios"),Object(p.mdx)("p",null,"Use the ",Object(p.mdx)("inlineCode",{parentName:"p"},"InputGroup.Radio")," or\n",Object(p.mdx)("inlineCode",{parentName:"p"},"InputGroup.Checkbox")," to add options to an input group."),Object(p.mdx)(i.a,{codeText:w.a,mdxType:"ReactPlayground"}),Object(p.mdx)("h2",j({},{id:"multiple-inputs"}),"Multiple inputs"),Object(p.mdx)("p",null,"While multiple inputs are supported visually, validation styles are only\navailable for input groups with a single input."),Object(p.mdx)(i.a,{codeText:D.a,mdxType:"ReactPlayground"}),Object(p.mdx)("h2",j({},{id:"multiple-addons"}),"Multiple addons"),Object(p.mdx)("p",null,"Multiple add-ons are supported and can be mixed with checkbox and radio\ninput versions."),Object(p.mdx)(i.a,{codeText:h.a,mdxType:"ReactPlayground"}),Object(p.mdx)("h2",j({},{id:"button-addons"}),"Button addons"),Object(p.mdx)(i.a,{codeText:b.a,mdxType:"ReactPlayground"}),Object(p.mdx)("h2",j({},{id:"buttons-with-dropdowns"}),"Buttons with Dropdowns"),Object(p.mdx)(i.a,{codeText:s.a,mdxType:"ReactPlayground"}),Object(p.mdx)("h2",j({},{id:"segmented-buttons"}),"Segmented buttons"),Object(p.mdx)(i.a,{codeText:y.a,mdxType:"ReactPlayground"}),Object(p.mdx)("h2",j({},{id:"api"}),"API"),Object(p.mdx)(u.a,{metadata:o.data.InputGroup,mdxType:"ComponentApi"}))}F.isMDXComponent=!0},"vs/B":function(n,t){n.exports='<>\n  <InputGroup className="mb-3">\n    <SplitButton\n      variant="outline-secondary"\n      title="Action"\n      id="segmented-button-dropdown-1"\n    >\n      <Dropdown.Item href="#">Action</Dropdown.Item>\n      <Dropdown.Item href="#">Another action</Dropdown.Item>\n      <Dropdown.Item href="#">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#">Separated link</Dropdown.Item>\n    </SplitButton>\n    <FormControl aria-label="Text input with dropdown button" />\n  </InputGroup>\n\n  <InputGroup className="mb-3">\n    <FormControl aria-label="Text input with dropdown button" />\n    <SplitButton\n      variant="outline-secondary"\n      title="Action"\n      id="segmented-button-dropdown-2"\n      alignRight\n    >\n      <Dropdown.Item href="#">Action</Dropdown.Item>\n      <Dropdown.Item href="#">Another action</Dropdown.Item>\n      <Dropdown.Item href="#">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#">Separated link</Dropdown.Item>\n    </SplitButton>\n  </InputGroup>\n</>;\n'},z1EJ:function(n,t){n.exports='<>\n  <InputGroup className="mb-3">\n    <DropdownButton\n      variant="outline-secondary"\n      title="Dropdown"\n      id="input-group-dropdown-1"\n    >\n      <Dropdown.Item href="#">Action</Dropdown.Item>\n      <Dropdown.Item href="#">Another action</Dropdown.Item>\n      <Dropdown.Item href="#">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#">Separated link</Dropdown.Item>\n    </DropdownButton>\n    <FormControl aria-label="Text input with dropdown button" />\n  </InputGroup>\n\n  <InputGroup className="mb-3">\n    <FormControl aria-label="Text input with dropdown button" />\n\n    <DropdownButton\n      variant="outline-secondary"\n      title="Dropdown"\n      id="input-group-dropdown-2"\n      align="end"\n    >\n      <Dropdown.Item href="#">Action</Dropdown.Item>\n      <Dropdown.Item href="#">Another action</Dropdown.Item>\n      <Dropdown.Item href="#">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#">Separated link</Dropdown.Item>\n    </DropdownButton>\n  </InputGroup>\n\n  <InputGroup>\n    <DropdownButton\n      variant="outline-secondary"\n      title="Dropdown"\n      id="input-group-dropdown-3"\n    >\n      <Dropdown.Item href="#">Action</Dropdown.Item>\n      <Dropdown.Item href="#">Another action</Dropdown.Item>\n      <Dropdown.Item href="#">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#">Separated link</Dropdown.Item>\n    </DropdownButton>\n    <FormControl aria-label="Text input with 2 dropdown buttons" />\n    <DropdownButton\n      variant="outline-secondary"\n      title="Dropdown"\n      id="input-group-dropdown-4"\n      align="end"\n    >\n      <Dropdown.Item href="#">Action</Dropdown.Item>\n      <Dropdown.Item href="#">Another action</Dropdown.Item>\n      <Dropdown.Item href="#">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item href="#">Separated link</Dropdown.Item>\n    </DropdownButton>\n  </InputGroup>\n</>;\n'}}]);
//# sourceMappingURL=component---src-pages-forms-input-group-mdx-d4e25bc06065793a99b0.js.map